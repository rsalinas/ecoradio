project(test)

cmake_minimum_required(VERSION 2.8.2)
include (CTest)
add_subdirectory(/usr/src/gtest gtest)
set(CMAKE_AUTOMOC ON)
set(CMAKE_INCLUDE_CURRENT_DIR ON)

function(add_gmock_test target)
    add_executable(${target} ${ARGN})
    target_link_libraries(${target} gmock)

    add_test(${target} ${target})
endfunction()

find_package(Qt5Core REQUIRED)

include_directories(../src)
add_executable(test-files test.cpp testutil.cpp)
add_executable(test-snd test-snd.cpp )
add_executable(sound_playback sound_playback.cpp)
add_executable(test-sched test-sched.cpp)
add_executable(test-rss test-rss.cpp )
add_executable(test-fifo test-fifo.cpp )
add_executable(ao_example ao_example.c)
add_executable(alsa-record-example alsa-record-example.c)
add_executable(test-wsstub test-wsstub.cpp)
add_executable(coreandui coreandui.cpp)
target_link_libraries(alsa-record-example asound)

target_link_libraries(test-files gtest ecoradio_snd ecoradio_util ecoradio_core)
target_link_libraries(test-snd gtest ecoradio_snd ecoradio_util)
target_link_libraries(sound_playback asound)
target_link_libraries(test-sched ecoradio_snd gtest ecoradio_core)
target_link_libraries(test-rss gtest  Qt5::Core ecoradio_snd ecoradio_util)
target_link_libraries(test-fifo gtest   gtest_main Qt5::Core ecoradio_snd ecoradio_util)
target_link_libraries(test-wsstub gtest  Qt5::Core wsstub ecoradio_core)
target_link_libraries(ao_example ao dl m)
target_link_libraries(coreandui gtest_main)

add_test(NAME AllTestsInFifo COMMAND test-fifo)
add_test(NAME AllTestsInRss COMMAND test-rss WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
add_test(NAME AllTestsInSched COMMAND test-sched WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}) #Really here the data?
add_test(NAME AllTestsInSnd COMMAND test-snd)
add_test(NAME AllTestsInFiles COMMAND test-files)
